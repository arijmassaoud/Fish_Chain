@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Your CSS variables are correct */
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --primary: 245 49% 35%;
    --border: 214.3 31.8% 91.4%;
    /* ...etc */
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    /* ...etc */
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }
  body {
    @apply bg-black text-foreground font-inter;
  }
  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  .container-section {
    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
  }

  /* This class is correct */
  .hover-lift {
    @apply transition-all duration-500 hover:-translate-y-3 hover:shadow-2xl;
  }

  /* ✅ FIX: Rewritten using standard CSS to avoid the '/' syntax error */
  .glass-effect {
    backdrop-filter: blur(16px);
    background-color: rgba(255, 255, 255, 0.1); /* Equivalent to bg-white/10 */
    border: 1px solid rgba(255, 255, 255, 0.2); /* Equivalent to border-white/20 */
    @apply transition-all duration-300;
  }

  .dark .glass-effect {
    backdrop-filter: blur(16px);
    background-color: rgba(0, 0, 0, 0.2); /* Equivalent to bg-black/20 */
    border: 1px solid hsla(var(--border), 0.5); /* border-gray-700/50 is roughly this */
  }

  /* ✅ FIX: Rewritten to avoid the '/' syntax error */
  .header-glow {
    /* This creates the shadow-2xl size with your primary color at 20% opacity */
    --tw-shadow-color: hsl(var(--primary) / 0.2);
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

@layer utilities {
  .text-shadow-lg {
    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  }
  
  .bg-pattern {
    background-image: radial-gradient(circle at 2px 2px, rgba(255,255,255,0.15) 1px, transparent 0);
    background-size: 20px 20px;
  }

  .dark .bg-pattern {
    background-image: radial-gradient(circle at 2px 2px, rgba(255,255,255,0.05) 1px, transparent 0);
  }

  .backdrop-glow {
    backdrop-filter: blur(16px) saturate(180%);
    background: rgba(255, 255, 255, 0.08);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .dark .backdrop-glow {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  /* Advanced hover effects */
  .hover-glow:hover {
    box-shadow: 0 0 30px rgba(99, 102, 241, 0.5);
    transform: translateY(-5px) scale(1.02);
  }

  .hover-rainbow:hover {
    background: linear-gradient(45deg, #ff0000, #ff7700, #ffdd00, #00ff00, #0099ff, #6600ff, #ff0099, #ff0000);
    background-size: 400%;
    animation: rainbow 2s linear infinite;
  }

  /* Ripple effect */
  .ripple {
    position: relative;
    overflow: hidden;
  }

  .ripple::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
  }

  .ripple:hover::after {
    width: 300px;
    height: 300px;
  }
}

/* Professional keyframes */
@keyframes glow {
  from {
    text-shadow: 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #0ff, 0 0 50px #0ff, 0 0 60px #0ff, 0 0 70px #0ff, 0 0 80px #0ff;
  }
  to {
    text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #0ff, 0 0 40px #0ff, 0 0 50px #0ff, 0 0 60px #0ff, 0 0 70px #0ff;
  }
}

@keyframes wiggle {
  0%, 7% {
    transform: rotateZ(0);
  }
  15% {
    transform: rotateZ(-15deg);
  }
  20% {
    transform: rotateZ(10deg);
  }
  25% {
    transform: rotateZ(-10deg);
  }
  30% {
    transform: rotateZ(6deg);
  }
  35% {
    transform: rotateZ(-4deg);
  }
  40%, 100% {
    transform: rotateZ(0);
  }
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes morph {
  0% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
  }
  50% {
    border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
  }
  100% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
  }
}

@keyframes rainbow {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 25%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes slideInFromLeft {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInFromRight {
  0% {
    transform: translateX(100%);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes zoomIn {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Responsive animations */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
}